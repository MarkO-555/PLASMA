; ACME COMPATIBLE OUTPUT
	!WORD	_SEGEND-_SEGBEGIN	; LENGTH OF HEADER + CODE/DATA + BYTECODE SEGMENT
_SEGBEGIN 
	!WORD	$6502			; MAGIC #
	!WORD	_SYSFLAGS			; SYSTEM FLAGS
	!WORD	_SUBSEG			; BYTECODE SUB-SEGMENT
	!WORD	_DEFCNT			; BYTECODE DEF COUNT
	!WORD	_INIT			; MODULE INITIALIZATION ROUTINE
; libsrc/longjmp.pla: 0001: asm incs
	!BYTE	$00			; END OF MODULE DEPENDENCIES
_A000 					; incs()
; libsrc/longjmp.pla: 0002:         !SOURCE    "vmsrc/plvmzp.inc"
        !SOURCE    "vmsrc/plvmzp.inc"
; libsrc/longjmp.pla: 0003: XPAGE   =       $1600
XPAGE   =       $1600
; libsrc/longjmp.pla: 0004: NEXTOP  =       $F0
NEXTOP  =       $F0
; libsrc/longjmp.pla: 0005: FETCHOP =       NEXTOP+1
FETCHOP =       NEXTOP+1
; libsrc/longjmp.pla: 0006: IP      =       FETCHOP+1
IP      =       FETCHOP+1
; libsrc/longjmp.pla: 0007: IPL     =       IP
IPL     =       IP
; libsrc/longjmp.pla: 0008: IPH     =       IPL+1
IPH     =       IPL+1
; libsrc/longjmp.pla: 0009: IPX     =       XPAGE+IPH
IPX     =       XPAGE+IPH
; libsrc/longjmp.pla: 0010: end
; libsrc/longjmp.pla: 0011: //
; libsrc/longjmp.pla: 0012: // Save environment (PLASMA ZP and stack) for below and return 0
; libsrc/longjmp.pla: 0013: //
; libsrc/longjmp.pla: 0014: export asm except(env)
_A001 					; except()
; libsrc/longjmp.pla: 0015:         LDA     ESTKL,X
        LDA     ESTKL,X
; libsrc/longjmp.pla: 0016:         STA     SRC
        STA     SRC
; libsrc/longjmp.pla: 0017:         LDA     ESTKH,X
        LDA     ESTKH,X
; libsrc/longjmp.pla: 0018:         STA     SRC+1
        STA     SRC+1
; libsrc/longjmp.pla: 0019:         STX     ESP
        STX     ESP
; libsrc/longjmp.pla: 0020:         TSX
        TSX
; libsrc/longjmp.pla: 0021:         STX     TMPL
        STX     TMPL
; libsrc/longjmp.pla: 0022:         LDY     TMPL
        LDY     TMPL
; libsrc/longjmp.pla: 0023: -       LDA     $0100,Y
-       LDA     $0100,Y
; libsrc/longjmp.pla: 0024:         STA     (SRC),Y
        STA     (SRC),Y
; libsrc/longjmp.pla: 0025:         INY
        INY
; libsrc/longjmp.pla: 0026:         BNE     -
        BNE     -
; libsrc/longjmp.pla: 0027:         INC     SRC+1
        INC     SRC+1
; libsrc/longjmp.pla: 0028:         LDX     #ESTK
        LDX     #ESTK
; libsrc/longjmp.pla: 0029: -       LDA     $00,X
-       LDA     $00,X
; libsrc/longjmp.pla: 0030:         STA     (SRC),Y
        STA     (SRC),Y
; libsrc/longjmp.pla: 0031:         INY
        INY
; libsrc/longjmp.pla: 0032:         INX
        INX
; libsrc/longjmp.pla: 0033:         BNE     -
        BNE     -
; libsrc/longjmp.pla: 0034:         TXA
        TXA
; libsrc/longjmp.pla: 0035:         LDX     ESP
        LDX     ESP
; libsrc/longjmp.pla: 0036:         STA     ESTKL,X
        STA     ESTKL,X
; libsrc/longjmp.pla: 0037:         STA     ESTKH,X
        STA     ESTKH,X
; libsrc/longjmp.pla: 0038:         RTS
        RTS
; libsrc/longjmp.pla: 0039: end
; libsrc/longjmp.pla: 0040: //
; libsrc/longjmp.pla: 0041: // Restore environment saved above and return retval
; libsrc/longjmp.pla: 0042: //
; libsrc/longjmp.pla: 0043: export asm throw(env, retval)
_A002 					; throw()
; libsrc/longjmp.pla: 0044:         LDA     ESTKL,X
        LDA     ESTKL,X
; libsrc/longjmp.pla: 0045:         STA     SRC
        STA     SRC
; libsrc/longjmp.pla: 0046:         LDA     ESTKH,X
        LDA     ESTKH,X
; libsrc/longjmp.pla: 0047:         STA     SRC+1
        STA     SRC+1
; libsrc/longjmp.pla: 0048:         LDA     ESTKL+1,X
        LDA     ESTKL+1,X
; libsrc/longjmp.pla: 0049:         STA     DST
        STA     DST
; libsrc/longjmp.pla: 0050:         LDY     ESTKH+1,X
        LDY     ESTKH+1,X
; libsrc/longjmp.pla: 0051:         INY
        INY
; libsrc/longjmp.pla: 0052:         STY     DST+1
        STY     DST+1
; libsrc/longjmp.pla: 0053:         LDX     #ESTK
        LDX     #ESTK
; libsrc/longjmp.pla: 0054:         LDY     #$00
        LDY     #$00
; libsrc/longjmp.pla: 0055: -       LDA     (DST),Y
-       LDA     (DST),Y
; libsrc/longjmp.pla: 0056:         STA     $00,X
        STA     $00,X
; libsrc/longjmp.pla: 0057:         INY
        INY
; libsrc/longjmp.pla: 0058:         INX
        INX
; libsrc/longjmp.pla: 0059:         BNE     -
        BNE     -
; libsrc/longjmp.pla: 0060:         DEC     DST+1
        DEC     DST+1
; libsrc/longjmp.pla: 0061:         LDX     TMPL
        LDX     TMPL
; libsrc/longjmp.pla: 0062:         TXS
        TXS
; libsrc/longjmp.pla: 0063:         LDY     TMPL
        LDY     TMPL
; libsrc/longjmp.pla: 0064: -       LDA     (DST),Y
-       LDA     (DST),Y
; libsrc/longjmp.pla: 0065:         STA     $0100,Y
        STA     $0100,Y
; libsrc/longjmp.pla: 0066:         INY
        INY
; libsrc/longjmp.pla: 0067:         BNE     -
        BNE     -
; libsrc/longjmp.pla: 0068:         LDX     ESP
        LDX     ESP
; libsrc/longjmp.pla: 0069:         LDA     SRC
        LDA     SRC
; libsrc/longjmp.pla: 0070:         STA     ESTKL,X
        STA     ESTKL,X
; libsrc/longjmp.pla: 0071:         LDA     SRC+1
        LDA     SRC+1
; libsrc/longjmp.pla: 0072:         STA     ESTKH,X
        STA     ESTKH,X
; libsrc/longjmp.pla: 0073:         RTS
        RTS
; libsrc/longjmp.pla: 0074: end
; libsrc/longjmp.pla: 0075: done
	!BYTE	$00			; PAD BYTE
_SUBSEG 				; BYTECODE STARTS
_INIT 
	!BYTE	$00			; CN	0
	!BYTE	$5C			; RET
_SYSFLAGS	=	0
_DEFCNT	=	1
_SEGEND 
;
; RE-LOCATEABLE DICTIONARY
;
	!BYTE	$00			; END OF RLD
;
; EXTERNAL/ENTRY SYMBOL DICTIONARY
;
	; DCI STRING: EXCEPT
	!BYTE	$C5,$D8,$C3,$C5,$D0,$54
	!BYTE	$08			; ENTRY SYMBOL FLAG
	!WORD	_A001		
	; DCI STRING: THROW
	!BYTE	$D4,$C8,$D2,$CF,$57
	!BYTE	$08			; ENTRY SYMBOL FLAG
	!WORD	_A002		
	!BYTE	$00			; END OF ESD
