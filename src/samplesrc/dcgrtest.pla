include "inc/cmdsys.plh"
include "inc/lines.plh"
include "inc/dcgrlib.plh"

sysflags resxtxt1|reshgr1|resxhgr1

//
// Test sprite
//
byte[] sprite   = $55,$55,$55,$05,$50,$55,$55,$55
byte[]          = $55,$55,$00,$00,$00,$00,$55,$55
byte[]          = $55,$00,$00,$AA,$AA,$00,$00,$55
byte[]          = $05,$00,$AA,$AA,$AA,$AA,$00,$50
byte[]          = $00,$A0,$AA,$FF,$FF,$AA,$0A,$00
byte[]          = $00,$AA,$FF,$FF,$FF,$FF,$AA,$00
byte[]          = $00,$AA,$1F,$12,$12,$F2,$AA,$00
byte[]          = $00,$AA,$2F,$21,$21,$F1,$AA,$00
byte[]          = $00,$AA,$1F,$12,$12,$F2,$AA,$00
byte[]          = $00,$AA,$2F,$21,$21,$F1,$AA,$00
byte[]          = $00,$AA,$FF,$FF,$FF,$FF,$AA,$00
byte[]          = $00,$A0,$AA,$FF,$FF,$AA,$0A,$00
byte[]          = $05,$00,$AA,$AA,$AA,$AA,$00,$50
byte[]          = $55,$00,$00,$AA,$AA,$00,$00,$55
byte[]          = $55,$55,$00,$00,$00,$00,$55,$55
byte[]          = $55,$55,$55,$05,$50,$55,$55,$55

word sprite7mask[7]
word sprite7[7]
word sprite7span, sprite7width

def compileSprite#0
    byte i

    for i = 0 to 6
        sprite7[i],     sprite7span, sprite7width = dcgrAllocBl7Mem(16, 16)
        sprite7mask[i], sprite7span, sprite7width = dcgrAllocBl7Mem(16, 16)
        dcgrColor(DCLR_BLACK)
        dcgrFillBl7Mem(0, 0, sprite7width, 16, sprite7[i], sprite7span)
        dcgrColor(DCLR_WHITE)
        dcgrFillBl7Mem(0, 0, sprite7width, 16, sprite7mask[i], sprite7span)
        dcgrOpMem(OP_SRC)
        dcgrPixMem(i + 2, 0, 16, 16, @sprite, sprite7width * 7, 16, sprite7[i], sprite7span)
        dcgrPixMem(i + 2, 0, 16, 16, @sprite, sprite7width * 7, 16, sprite7mask[i], sprite7span)
        dcgrOpMem(OP_XOR)
        dcgrPixMem(i + 2, 0, 16, 16, @sprite, sprite7width * 7, 16, sprite7mask[i], sprite7span)

        dcgrMemBl7Scr(0, i*16, sprite7width, 16, sprite7[i],     sprite7span)
        dcgrMemBl7Scr(3, i*16, sprite7width, 16, sprite7mask[i], sprite7span)
    next
    dcgrOpMem(OP_SRC)
end
def dcgrTest#0
    word i, j, k, ok7, om7, inci, incj, inck
    word backblk, backspan, backw7
    word restrblk, restrspan, restrw7, restrw
    byte mode

    mode = 1
    setlineplot(@dcgrPlotScr)
    setlinespans(@dcgrHLinScr, @dcgrVLinScr)
    for i = 0 to 191 step 2
        dcgrColor(i)
        linespans(0, 0, 139, i)
    next
    for i = 139 downto 0 step 2
        dcgrColor(i)
        linespans(0, 0, i, 191)
    next
    dcgrColor(DCLR_BLACK)
    dcgrFillBl7Scr(21/7, 30, 100/7, 132)
    dcgrColor(DCLR_WHITE)
    dcgrHLinScr((21/7)*7, (21/7)*7+(100/7)*7, 30)
    dcgrHLinScr((21/7)*7, (21/7)*7+(100/7)*7, 30+132)
    dcgrVLinScr(30, 30+132, (21/7)*7)
    dcgrVLinScr(30, 30+132, (21/7)*7+(100/7)*7)
    i = 64; j = 64; k = 86
    ok7 = k/7
    inci = 1; incj = 1; inck = 2
    backblk, backspan, backw7 = dcgrAllocBl7Mem(SCR_WIDTH, 16)
    dcgrScrBl7Mem(0, 170, backw7, 16, backblk, backspan)
    restrblk, restrspan, restrw7 = dcgrAllocBl7Mem(16, 16)
    restrw = restrw7 * 7
    while ^$C000 < 128
        ok7, om7 = divmod(k, 7)
        dcgrMemBl7Mem(0, 0, restrw7, 16, backblk + ok7 * 4, backspan, restrw7, 16, restrblk, restrspan)
        if mode
            if om7 < 0; om7 = 6+om7; fin
            dcgrOpMem(OP_AND)
            dcgrMemBl7Mem(0, 0, sprite7width, 16, sprite7mask[om7], sprite7span, restrw7, 16, restrblk, restrspan)
            dcgrOpMem(OP_XOR)
            dcgrMemBl7Mem(0, 0, sprite7width, 16, sprite7[om7], sprite7span, restrw7, 16, restrblk, restrspan)
            dcgrOpMem(OP_SRC)
            if k < 0
                dcgrColor(DCLR_WHITE)
                dcgrHLinMem(0, restrw - 1, 0, restrblk, restrspan)
                dcgrHLinMem(0, restrw - 1, 15, restrblk, restrspan)
                dcgrVLinMem(0, 15, 0, restrblk, restrspan)
                dcgrVLinMem(0, 15, restrw - 1, restrblk, restrspan)
            fin
        else
            dcgrPixMem(om7 + 2, 0, 16, 16, @sprite, restrw, 16, restrblk, restrspan)
        fin
        dcgrMemBl7Scr(ok7, 170, restrw7, 16, restrblk, restrspan)
        if k < 0; getc; fin
        if k > 136 or k < -16; inck = -inck; fin
        k = k + inck
        //dcgrPixScr(i, j, 16, 16, @sprite)
        if i > 102 or i < 23; inci = -inci; fin
        i = i + inci
        if j > 145 or j < 32; incj = -incj; fin
        j = j + incj
        mode = !mode
    loop
    ^$C010
    getc
end

dcgrMode(0)
compileSprite
dcgrTest
dcgrMode(-1)
done
